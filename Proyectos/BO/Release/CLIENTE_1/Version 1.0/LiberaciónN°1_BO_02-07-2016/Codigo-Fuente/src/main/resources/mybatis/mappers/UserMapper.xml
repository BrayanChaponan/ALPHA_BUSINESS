<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alphabuss.backoffice.dao.UserMapper">
	
	<!-- Habilitar cacheado de querys en sentencias select -->
<!-- 	<cache/> -->

	<resultMap type="secUser" id="userRM">
		<id property="userId" column="UserId"/>
		<result property="userName" column="UserName"/>
		<result property="password" column="Password"/>
		<result property="firstName" column="FirstName"/>
		<result property="lastName" column="LastName"/>
		<result property="email" column="Email"/>
		<result property="status" column="Status"/>
		
		<result property="statusInt" column="StatusInt"/>
		<result property="statusBool" column="StatusBool"/>
		
		<association property="secRole" column="RoleId" resultMap="roleRM"/>
	</resultMap>
	
	<resultMap type="secRole" id="roleRM">
		<id property="roleId" column="RoleId"/>
		<result property="name" column="Name"/>
		<result property="description" column="Description"/>
	</resultMap>
	
	<select id="userLogin" parameterType="secUser" resultMap="userRM">
		SELECT 
    		s.UserId,
		    s.UserName,
		    aes_decrypt(Password, 'admin') as password,
		    s.FirstName,
		    s.LastName,
		    s.Email,
		    s.Status,
		    r.RoleId
		FROM 
			SecUser s INNER JOIN SecRole r ON s.RoleId = r.RoleId
		WHERE
			s.Username = #{userName}
	</select>	
	
	<select id="usersList" resultMap="userRM">		
		SELECT 
    		s.UserId,
		    s.UserName,
		    s.FirstName,
		    s.LastName,
		    s.Email,
		    s.Status,
		    r.Name,
		    if(s.Status = 'A', 1, 0) as StatusInt,
		    if(s.Status = 'A', true, false) as StatusBool
		FROM 
			SecUser s INNER JOIN SecRole r ON s.RoleId = r.RoleId
	</select>
	
	<select id="getUser" parameterType="secUser" resultMap="userRM">
		SELECT 
    		s.UserId,
		    s.UserName,
		    s.FirstName,
		    s.LastName,
		    s.Email,
		    s.Status,
		    r.RoleId,
		    r.Name
		FROM 
			SecUser s INNER JOIN SecRole r ON s.RoleId = r.RoleId
		WHERE
			s.UserId = #{userId}
	</select>
	
	<select id="validateRegisteredUserName" parameterType="secUser" resultMap="userRM">
		SELECT 
    		s.UserId,
		    s.UserName
    	FROM
    		SecUser s
    	WHERE
    		s.UserName = #{userName}
	</select>
	
	<insert id="userRegister" parameterType="secUser" flushCache="true"
		useGeneratedKeys="true" keyProperty="userId">
		INSERT INTO
			SecUser(UserName, Password, FirstName, LastName, Email, RoleId, Status, DatetimeIns)
		VALUES
			(#{userName}, aes_encrypt(#{password}, 'admin'), #{firstName}, #{lastName}, #{email}, #{secRole.roleId}, #{status}, NOW())
	</insert>
	
	<update id="userUpdate" parameterType="secUser" flushCache="true">
		UPDATE
			SecUser
		SET
			UserName = #{userName}, 
			Password = aes_encrypt(#{password}, 'admin'),
			FirstName = #{firstName}, 
			LastName = #{lastName},
			Email = #{email},
			RoleId = #{secRole.roleId},
			Status = #{status}
		WHERE
			UserId = #{userId}			 
	</update>

</mapper>